# ASSIGNMENT 1
# You will be implementing the Legal Aid Bureau's interview to determine
# whether an applicant is eligible for legal aid. 
# The total score that can be awarded for this assignment is 20.
# The reference interview is found here:
# https://guided.page/interview?i=docassemble.playground3%3Alab.yml#page1
# Resources are found here:
# https://lab.mlaw.gov.sg/legal-services/taking-the-means-test/
# https://sso.agc.gov.sg/SL/LAAA1995-RG1#Sc1-
---
# MODIFY THIS BLOCK
# Please fill in the relevant information.
metadata:
  title: |
    Means Test for Legal Aid Bureau's Legal Aid
  short title: |
    Means Test
  description: |
    This Means Test assesses an applicant's financial circumstances to determine if the applicant have limited means. Only applicants that pass the Means Test may be eligible for Legal Aid Bureau's Legal Aid. 
  authors:
    - name: Zhang Yuqian
      organization: COR-LAW-2215 Digital Intelligence for Lawyers
  revision_date: 2020-10-09
---
# DO NOT MODIFY THIS BLOCK. SCORE: 5
# Implement a check_nric function in a module file called validation.py.
# It should check for (1) correct format and (2) that it is a valid NRIC.
# Use a regular expression to test for the correct format.
# Implement the checksum algorithm to determine whether the NRIC is valid.
# The NRIC checksum algorithm can be found on:
# http://www.ngiam.net/NRIC/ or Wikipedia
# Test your function using data from: https://samliew.com/nric-generator
modules:
  .validation
---
# DO NOT MODIFY THIS BLOCK
# This is your objects block.
# Individual is used for the applicant.
# DAList is used for household_incomes.
objects:
  applicant: Individual
  household_members: DAList.using(object_type=Individual, there_is_another=False)
---
# MODIFY THIS BLOCK (BUT DO NOT MOVE IT). SCORE: 5
# Use this block to control the interview logic.
# Include this line somewhere in your code: 
#   household_members.append(applicant)
# This line of code adds the applicant to the household_members DAList.
# This ensures that the applicant appears in the household_members.table.
mandatory: True
code: |
  if own_property:
    if more_than_one_property:
      error_message = "You do not qualify for legal aid, because you own more than one property."
      ineligible_screen
    else:
      if not own_residency:
        error_message = "You do not qualify for legal aid, because your property is not used by you as your place of residence."
        ineligible_screen
      else:
        if property_value > 13000:
          error_message = "You do not qualify for legal aid, because your property's annual value is more than $13000."
          ineligible_screen
  total_savings_and_investments = bank_account_savings + cpf_savings + other_investments
  if applicant.age_in_years() < 60 and total_savings_and_investments > 10000:
    error_message = "You do not qualify for legal aid, because your savings is more than $10000."
    ineligible_screen
  if applicant.age_in_years() >= 60 and total_savings_and_investments > 40000:
    error_message = "You do not qualify for legal aid, because your savings is more than $40000."
    ineligible_screen
  else:
    household_members.append(applicant)
# I included error messages which will be shown on the inelligble screen. Thus, the user will know why he or she does not qualify for legal aid. 
---
# DO NOT MODIFY THIS BLOCK OR MOVE IT
mandatory: True
code: |
  if household_members.there_are_any:
    review_household_members
---
# MODIFY THIS BLOCK (BUT DO NOT MOVE IT). SCORE: 5
# Use this block to write code that calculates the average PCHI
mandatory: True
code: |
  total_household_income = 0
  for x in household_members:
    total_household_income = total_household_income + x.income
  PCHI = total_household_income / (len(household_members)*12)
  if PCHI > 950:
    error_message = "You do not qualify for legal aid, because your per capita monthly household income exceeds the limit."
    ineligible_screen
  else:
    eligible_screen
---
question: |
  Do you own any property?" 
yesno: own_property
---
question: |
  Property Information
fields: 
  - "Do you own more than one property?": more_than_one_property
    datatype: yesnoradio
  - "Do you currently reside in this property?": own_residency
    datatype: yesnoradio
    show if: 
      variable: more_than_one_property
      is: False
  - "What is the annual value of your residential property?": property_value
    datatype: currency
    min: 0
    show if: own_residency
    help: |
      Annual value of your house is the gross amount at which you can reasonably be expected to be let from year to year, when you pay for the expenses of repair, insurance, maintenance or upkeep and all taxes (other than goods and services tax). 
# I include a definition of annual value so that users can easily understand the question. 
---
question: |
  Savings Information
fields: 
  - "Enter your birth date": applicant.birthdate
    datatype: date
  - "Enter your bank accounts savings (personal or joint)": bank_account_savings
    datatype: currency
    min: 0
  - "Enter your overall value of shares in your Central Depository (CDP) account": cpf_savings
    datatype: currency
    min: 0
  - "Enter your other financial/investment products with a cash value": other_investments
    datatype: currency
    min: 0
    help: |
      Other financial/investment products include things such as fixed deposit accounts at financial institutions, and shares, bonds and exchange traded funds aside from those in your CDP account.
# I break down savings and investments into various sources and provide some definitions to help user understand the questions. 
---
question: |
  Please enter your information. 
fields: 
  - "First Name": applicant.name.first
  - "Last Name": applicant.name.last
  - "NRIC": nric
    validate: validate_nric
  - "Your total income in past 12 months": applicant.income
    datatype: currency
    min: 0
  - "Street Number and Name": applicant.address.address
    address autocomplete: True
# I added autocomplete so that users do not have to type everything.  
  - "Apartment Unit": applicant.address.apartment_unit
    required: False
  - "Postcode": applicant.address.zip
  - "Country": applicant.address.country
    code: |
      countries_list()
---
question: |
  Congratulations! You have passed the Means Test.
subquestion: |  
  Next, you will be given an appointment for **Statement Taking**. During the Statement Taking, a Legal Executive will ask you questions about your case. You should provide LAB with the full facts of your case as well as all the relevant documents/evidence. This helps LAB to investigate your case and assess whether legal aid should be granted to you.
  
  After your statement is taken, LAB will investigate your case and assess if legal aid should be granted to you. LAB will assess if you have reasonable grounds for bringing or defending a case in Court (“**the Merits Test**”), after we get a thorough understanding of your case.
  
  More information on the Merits Test can be found [here](https://lab.mlaw.gov.sg/legal-services/taking-the-merits-test/).
# I provide users with the next step forward.   
event: eligible_screen
buttons: 
  - Exit: exit
  - Restart: restart
---
question: |
  Sorry but you do not qualify for legal assistance. 
subquestion: |
  ${ error_message }
# The error message defined above will appear here. 
event: ineligible_screen
buttons: 
  - Exit: exit
  - Restart: restart
---
# DO NOT MODIFY THIS BLOCK
table: household_members.table
rows: household_members
columns: 
  - Name: row_item
  - Birthdate: row_item.birthdate
  - Income: row_item.income
edit:
  - name.first
---
# DO NOT MODIFY THIS BLOCK
question: | 
  Please add all other household members.
subquestion: |
  A household member is any person residing with you and related by:
  
  1. blood
  2. marriage; or
  3. adoption.
  
  Press continue when you have added all household members.
  
  ${household_members.table}
  ${household_members.add_action() }
  
field: review_household_members
---
# DO NOT MODIFY THIS BLOCK
question: |
  Information about your ${ordinal(i)} household member:
fields:
  - First Name: household_members[i].name.first
  - Last Name: household_members[i].name.last
  - Birthdate: household_members[i].birthdate
    datatype: date
  - "This person's total income in past 12 months": household_members[i].income
    datatype: currency
    min: 0
    default: 0
---
# IMPLEMENT ALL YOUR QUESTION BLOCKS.
# Implement all the question blocks correctly. Score 3
# Improving the usability / user experience. Score 2